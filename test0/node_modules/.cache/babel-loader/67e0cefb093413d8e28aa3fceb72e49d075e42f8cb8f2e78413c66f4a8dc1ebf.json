{"ast":null,"code":"var _jsxFileName = \"/Users/hyunseok/Desktop/programming/hook/src/component/EffectEx.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EffectEx() {\n  _s();\n  const [count, setCount] = useState(1);\n  const [name, setName] = useState(\"\");\n\n  //함수 실행 count + 1\n  const handleCountUpdate = () => {\n    setCount(count + 1);\n  };\n  const handleInputChange = e => {\n    setName(e.target.value);\n  };\n\n  // 렌더링 될때마다 매번 실행\n  // 화면이 렌더링된 직후에 불리게 되는 것\n  useEffect(() => {\n    // ...\n    console.log(\"ss\");\n  });\n\n  //마운트, 배열 변경될 때만 실행\n  useEffect(() => {\n    // ...\n    console.log(\"count!!!\");\n  }, [count]);\n  useEffect(() => {\n    // ...\n    console.log(\"name?????\");\n  }, [name]);\n\n  // 처음만 렌더링\n  useEffect(() => {\n    // ...\n    console.log(\"1번째!!\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCountUpdate,\n      children: \"\\uC5C5\\uB370\\uC774\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"count:\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\uC774\\uB984 : \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(EffectEx, \"SssoDuOGTcd9EL7Ev/bKTyZrYYg=\");\n_c = EffectEx;\nexport default EffectEx;\nvar _c;\n$RefreshReg$(_c, \"EffectEx\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EffectEx","_s","count","setCount","name","setName","handleCountUpdate","handleInputChange","e","target","value","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/hyunseok/Desktop/programming/hook/src/component/EffectEx.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction EffectEx() {\n  const [count, setCount] = useState(1);\n  const [name, setName] = useState(\"\");\n\n  //함수 실행 count + 1\n  const handleCountUpdate = () => {\n    setCount(count + 1);\n  };\n\n  const handleInputChange = (e) => {\n    setName(e.target.value);\n  };\n\n  // 렌더링 될때마다 매번 실행\n  // 화면이 렌더링된 직후에 불리게 되는 것\n  useEffect(() => {\n    // ...\n    console.log(\"ss\");\n  });\n\n  //마운트, 배열 변경될 때만 실행\n  useEffect(() => {\n    // ...\n    console.log(\"count!!!\");\n  }, [count]);\n\n  useEffect(() => {\n    // ...\n    console.log(\"name?????\");\n  }, [name]);\n\n  // 처음만 렌더링\n  useEffect(() => {\n    // ...\n    console.log(\"1번째!!\");\n  }, []);\n\n  return (\n    <div>\n      <button onClick={handleCountUpdate}>업데이트</button>\n      <span>count:{count}</span>\n      <br />\n      <input type=\"text\" value={name} onChange={handleInputChange} />\n      <span>이름 : {name}</span>\n    </div>\n  );\n}\n\nexport default EffectEx;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMK,iBAAiB,GAAIC,CAAC,IAAK;IAC/BH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;;EAED;EACA;EACAb,SAAS,CAAC,MAAM;IACd;IACAc,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACnB,CAAC,CAAC;;EAEF;EACAf,SAAS,CAAC,MAAM;IACd;IACAc,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACzB,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEXL,SAAS,CAAC,MAAM;IACd;IACAc,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;;EAEV;EACAP,SAAS,CAAC,MAAM;IACd;IACAc,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAQe,OAAO,EAAER,iBAAkB;MAAAO,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDnB,OAAA;MAAAc,QAAA,GAAM,QAAM,EAACX,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1BnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACT,KAAK,EAAEN,IAAK;MAACgB,QAAQ,EAAEb;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DnB,OAAA;MAAAc,QAAA,GAAM,iBAAK,EAACT,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACjB,EAAA,CA9CQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}