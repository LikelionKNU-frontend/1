{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Park\\\\Desktop\\\\lion\\\\session1\\\\src\\\\component\\\\ClickCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClickCounter() {\n  _s();\n  // 렌더링을 강제로 발생시키기 위한 상태값\n  const [renderer, setRenderer] = useState(0);\n\n  // useRef: 렌더링 사이에 값이 유지됨, 변경돼도 렌더링 발생 안 함\n  const countRef = useRef(0);\n\n  // 일반 변수: 함수 다시 실행될 때마다 초기화됨 (렌더링되면 0으로 리셋됨)\n  let countVar = 0;\n\n  // 강제로 렌더링을 발생시키는 함수\n  const doRendering = () => {\n    setRenderer(renderer + 1); // 상태값을 바꾸면 리렌더링 발생\n  };\n  const increaseRef = () => {\n    countRef.current += 1;\n    console.log(\"Ref : \", countRef.current);\n  };\n\n  // 렌더링 시 다시 0\n  const increaseVar = () => {\n    countVar += 1;\n    console.log(\"Var : \", countVar);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ref: \", countRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Var: \", countVar]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: doRendering,\n      children: \"\\uB80C\\uB354\\uB9C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseRef,\n      children: \"Ref\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseVar,\n      children: \"Var\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ClickCounter, \"K6TXTaX3DSz+4VPRcjtKzYPHLJ0=\");\n_c = ClickCounter;\nexport default ClickCounter;\nvar _c;\n$RefreshReg$(_c, \"ClickCounter\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","ClickCounter","_s","renderer","setRenderer","countRef","countVar","doRendering","increaseRef","current","console","log","increaseVar","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Park/Desktop/lion/session1/src/component/ClickCounter.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nfunction ClickCounter() {\r\n  // 렌더링을 강제로 발생시키기 위한 상태값\r\n  const [renderer, setRenderer] = useState(0);\r\n\r\n  // useRef: 렌더링 사이에 값이 유지됨, 변경돼도 렌더링 발생 안 함\r\n  const countRef = useRef(0);\r\n\r\n  // 일반 변수: 함수 다시 실행될 때마다 초기화됨 (렌더링되면 0으로 리셋됨)\r\n  let countVar = 0;\r\n\r\n  // 강제로 렌더링을 발생시키는 함수\r\n  const doRendering = () => {\r\n    setRenderer(renderer + 1); // 상태값을 바꾸면 리렌더링 발생\r\n  };\r\n\r\n  const increaseRef = () => {\r\n    countRef.current += 1;\r\n    console.log(\"Ref : \", countRef.current);\r\n  };\r\n\r\n  // 렌더링 시 다시 0\r\n  const increaseVar = () => {\r\n    countVar += 1;\r\n    console.log(\"Var : \", countVar);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Ref: {countRef.current}</p>\r\n      <p>Var: {countVar}</p>\r\n\r\n      <button onClick={doRendering}>렌더링</button>\r\n\r\n      <button onClick={increaseRef}>Ref버튼</button>\r\n\r\n      <button onClick={increaseVar}>Var버튼</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClickCounter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAMO,QAAQ,GAAGR,MAAM,CAAC,CAAC,CAAC;;EAE1B;EACA,IAAIS,QAAQ,GAAG,CAAC;;EAEhB;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBH,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBH,QAAQ,CAACI,OAAO,IAAI,CAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEN,QAAQ,CAACI,OAAO,CAAC;EACzC,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBN,QAAQ,IAAI,CAAC;IACbI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,QAAQ,CAAC;EACjC,CAAC;EAED,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAG,OAAK,EAACR,QAAQ,CAACI,OAAO;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BjB,OAAA;MAAAa,QAAA,GAAG,OAAK,EAACP,QAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtBjB,OAAA;MAAQkB,OAAO,EAAEX,WAAY;MAAAM,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE1CjB,OAAA;MAAQkB,OAAO,EAAEV,WAAY;MAAAK,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE5CjB,OAAA;MAAQkB,OAAO,EAAEN,WAAY;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACf,EAAA,CAtCQD,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}